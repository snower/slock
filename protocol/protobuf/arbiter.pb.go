// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: arbiter.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReplSetMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host    string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Weight  uint32 `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	Arbiter uint32 `protobuf:"varint,3,opt,name=arbiter,proto3" json:"arbiter,omitempty"`
	Role    uint32 `protobuf:"varint,4,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *ReplSetMember) Reset() {
	*x = ReplSetMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplSetMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplSetMember) ProtoMessage() {}

func (x *ReplSetMember) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplSetMember.ProtoReflect.Descriptor instead.
func (*ReplSetMember) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{0}
}

func (x *ReplSetMember) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ReplSetMember) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ReplSetMember) GetArbiter() uint32 {
	if x != nil {
		return x.Arbiter
	}
	return 0
}

func (x *ReplSetMember) GetRole() uint32 {
	if x != nil {
		return x.Role
	}
	return 0
}

type ReplSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Gid      string           `protobuf:"bytes,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Version  uint32           `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Vertime  uint64           `protobuf:"varint,4,opt,name=vertime,proto3" json:"vertime,omitempty"`
	Owner    string           `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	Members  []*ReplSetMember `protobuf:"bytes,6,rep,name=members,proto3" json:"members,omitempty"`
	CommitId uint64           `protobuf:"varint,7,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
}

func (x *ReplSet) Reset() {
	*x = ReplSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplSet) ProtoMessage() {}

func (x *ReplSet) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplSet.ProtoReflect.Descriptor instead.
func (*ReplSet) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{1}
}

func (x *ReplSet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReplSet) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *ReplSet) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ReplSet) GetVertime() uint64 {
	if x != nil {
		return x.Vertime
	}
	return 0
}

func (x *ReplSet) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ReplSet) GetMembers() []*ReplSetMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *ReplSet) GetCommitId() uint64 {
	if x != nil {
		return x.CommitId
	}
	return 0
}

type ArbiterConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromHost string `protobuf:"bytes,1,opt,name=from_host,json=fromHost,proto3" json:"from_host,omitempty"`
	ToHost   string `protobuf:"bytes,2,opt,name=to_host,json=toHost,proto3" json:"to_host,omitempty"`
}

func (x *ArbiterConnectRequest) Reset() {
	*x = ArbiterConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterConnectRequest) ProtoMessage() {}

func (x *ArbiterConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterConnectRequest.ProtoReflect.Descriptor instead.
func (*ArbiterConnectRequest) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{2}
}

func (x *ArbiterConnectRequest) GetFromHost() string {
	if x != nil {
		return x.FromHost
	}
	return ""
}

func (x *ArbiterConnectRequest) GetToHost() string {
	if x != nil {
		return x.ToHost
	}
	return ""
}

type ArbiterConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrMessage string `protobuf:"bytes,1,opt,name=err_message,json=errMessage,proto3" json:"err_message,omitempty"`
}

func (x *ArbiterConnectResponse) Reset() {
	*x = ArbiterConnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterConnectResponse) ProtoMessage() {}

func (x *ArbiterConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterConnectResponse.ProtoReflect.Descriptor instead.
func (*ArbiterConnectResponse) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{3}
}

func (x *ArbiterConnectResponse) GetErrMessage() string {
	if x != nil {
		return x.ErrMessage
	}
	return ""
}

type ArbiterAnnouncementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromHost string   `protobuf:"bytes,1,opt,name=from_host,json=fromHost,proto3" json:"from_host,omitempty"`
	ToHost   string   `protobuf:"bytes,2,opt,name=to_host,json=toHost,proto3" json:"to_host,omitempty"`
	Replset  *ReplSet `protobuf:"bytes,3,opt,name=replset,proto3" json:"replset,omitempty"`
}

func (x *ArbiterAnnouncementRequest) Reset() {
	*x = ArbiterAnnouncementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterAnnouncementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterAnnouncementRequest) ProtoMessage() {}

func (x *ArbiterAnnouncementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterAnnouncementRequest.ProtoReflect.Descriptor instead.
func (*ArbiterAnnouncementRequest) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{4}
}

func (x *ArbiterAnnouncementRequest) GetFromHost() string {
	if x != nil {
		return x.FromHost
	}
	return ""
}

func (x *ArbiterAnnouncementRequest) GetToHost() string {
	if x != nil {
		return x.ToHost
	}
	return ""
}

func (x *ArbiterAnnouncementRequest) GetReplset() *ReplSet {
	if x != nil {
		return x.Replset
	}
	return nil
}

type ArbiterAnnouncementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrMessage string `protobuf:"bytes,1,opt,name=err_message,json=errMessage,proto3" json:"err_message,omitempty"`
}

func (x *ArbiterAnnouncementResponse) Reset() {
	*x = ArbiterAnnouncementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterAnnouncementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterAnnouncementResponse) ProtoMessage() {}

func (x *ArbiterAnnouncementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterAnnouncementResponse.ProtoReflect.Descriptor instead.
func (*ArbiterAnnouncementResponse) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{5}
}

func (x *ArbiterAnnouncementResponse) GetErrMessage() string {
	if x != nil {
		return x.ErrMessage
	}
	return ""
}

type ArbiterVoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ArbiterVoteRequest) Reset() {
	*x = ArbiterVoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterVoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterVoteRequest) ProtoMessage() {}

func (x *ArbiterVoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterVoteRequest.ProtoReflect.Descriptor instead.
func (*ArbiterVoteRequest) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{6}
}

type ArbiterVoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrMessage string `protobuf:"bytes,1,opt,name=err_message,json=errMessage,proto3" json:"err_message,omitempty"`
	Host       string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Weight     uint32 `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	Arbiter    uint32 `protobuf:"varint,4,opt,name=arbiter,proto3" json:"arbiter,omitempty"`
	AofId      string `protobuf:"bytes,5,opt,name=aof_id,json=aofId,proto3" json:"aof_id,omitempty"`
	Role       uint32 `protobuf:"varint,6,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *ArbiterVoteResponse) Reset() {
	*x = ArbiterVoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterVoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterVoteResponse) ProtoMessage() {}

func (x *ArbiterVoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterVoteResponse.ProtoReflect.Descriptor instead.
func (*ArbiterVoteResponse) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{7}
}

func (x *ArbiterVoteResponse) GetErrMessage() string {
	if x != nil {
		return x.ErrMessage
	}
	return ""
}

func (x *ArbiterVoteResponse) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ArbiterVoteResponse) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ArbiterVoteResponse) GetArbiter() uint32 {
	if x != nil {
		return x.Arbiter
	}
	return 0
}

func (x *ArbiterVoteResponse) GetAofId() string {
	if x != nil {
		return x.AofId
	}
	return ""
}

func (x *ArbiterVoteResponse) GetRole() uint32 {
	if x != nil {
		return x.Role
	}
	return 0
}

type ArbiterProposalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalId uint64 `protobuf:"varint,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	AofId      string `protobuf:"bytes,2,opt,name=aof_id,json=aofId,proto3" json:"aof_id,omitempty"`
	Host       string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *ArbiterProposalRequest) Reset() {
	*x = ArbiterProposalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterProposalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterProposalRequest) ProtoMessage() {}

func (x *ArbiterProposalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterProposalRequest.ProtoReflect.Descriptor instead.
func (*ArbiterProposalRequest) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{8}
}

func (x *ArbiterProposalRequest) GetProposalId() uint64 {
	if x != nil {
		return x.ProposalId
	}
	return 0
}

func (x *ArbiterProposalRequest) GetAofId() string {
	if x != nil {
		return x.AofId
	}
	return ""
}

func (x *ArbiterProposalRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type ArbiterProposalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrMessage string `protobuf:"bytes,1,opt,name=err_message,json=errMessage,proto3" json:"err_message,omitempty"`
	ProposalId uint64 `protobuf:"varint,2,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
}

func (x *ArbiterProposalResponse) Reset() {
	*x = ArbiterProposalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterProposalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterProposalResponse) ProtoMessage() {}

func (x *ArbiterProposalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterProposalResponse.ProtoReflect.Descriptor instead.
func (*ArbiterProposalResponse) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{9}
}

func (x *ArbiterProposalResponse) GetErrMessage() string {
	if x != nil {
		return x.ErrMessage
	}
	return ""
}

func (x *ArbiterProposalResponse) GetProposalId() uint64 {
	if x != nil {
		return x.ProposalId
	}
	return 0
}

type ArbiterCommitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalId uint64 `protobuf:"varint,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	AofId      string `protobuf:"bytes,2,opt,name=aof_id,json=aofId,proto3" json:"aof_id,omitempty"`
	Host       string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *ArbiterCommitRequest) Reset() {
	*x = ArbiterCommitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterCommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterCommitRequest) ProtoMessage() {}

func (x *ArbiterCommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterCommitRequest.ProtoReflect.Descriptor instead.
func (*ArbiterCommitRequest) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{10}
}

func (x *ArbiterCommitRequest) GetProposalId() uint64 {
	if x != nil {
		return x.ProposalId
	}
	return 0
}

func (x *ArbiterCommitRequest) GetAofId() string {
	if x != nil {
		return x.AofId
	}
	return ""
}

func (x *ArbiterCommitRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type ArbiterCommitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrMessage string `protobuf:"bytes,1,opt,name=err_message,json=errMessage,proto3" json:"err_message,omitempty"`
	CommitId   uint64 `protobuf:"varint,2,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
}

func (x *ArbiterCommitResponse) Reset() {
	*x = ArbiterCommitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterCommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterCommitResponse) ProtoMessage() {}

func (x *ArbiterCommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterCommitResponse.ProtoReflect.Descriptor instead.
func (*ArbiterCommitResponse) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{11}
}

func (x *ArbiterCommitResponse) GetErrMessage() string {
	if x != nil {
		return x.ErrMessage
	}
	return ""
}

func (x *ArbiterCommitResponse) GetCommitId() uint64 {
	if x != nil {
		return x.CommitId
	}
	return 0
}

type ArbiterStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ArbiterStatusRequest) Reset() {
	*x = ArbiterStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterStatusRequest) ProtoMessage() {}

func (x *ArbiterStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterStatusRequest.ProtoReflect.Descriptor instead.
func (*ArbiterStatusRequest) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{12}
}

type ArbiterStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrMessage string `protobuf:"bytes,1,opt,name=err_message,json=errMessage,proto3" json:"err_message,omitempty"`
	AofId      string `protobuf:"bytes,2,opt,name=aof_id,json=aofId,proto3" json:"aof_id,omitempty"`
	Role       uint32 `protobuf:"varint,3,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *ArbiterStatusResponse) Reset() {
	*x = ArbiterStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterStatusResponse) ProtoMessage() {}

func (x *ArbiterStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterStatusResponse.ProtoReflect.Descriptor instead.
func (*ArbiterStatusResponse) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{13}
}

func (x *ArbiterStatusResponse) GetErrMessage() string {
	if x != nil {
		return x.ErrMessage
	}
	return ""
}

func (x *ArbiterStatusResponse) GetAofId() string {
	if x != nil {
		return x.AofId
	}
	return ""
}

func (x *ArbiterStatusResponse) GetRole() uint32 {
	if x != nil {
		return x.Role
	}
	return 0
}

type ArbiterMemberStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host        string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Weight      uint32 `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	Arbiter     uint32 `protobuf:"varint,3,opt,name=arbiter,proto3" json:"arbiter,omitempty"`
	Role        uint32 `protobuf:"varint,4,opt,name=role,proto3" json:"role,omitempty"`
	Status      uint32 `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	LastUpdated int64  `protobuf:"varint,6,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
	LastDelay   int64  `protobuf:"varint,7,opt,name=lastDelay,proto3" json:"lastDelay,omitempty"`
	LastError   int32  `protobuf:"varint,8,opt,name=lastError,proto3" json:"lastError,omitempty"`
	AofId       []byte `protobuf:"bytes,9,opt,name=aofId,proto3" json:"aofId,omitempty"`
	IsSelf      bool   `protobuf:"varint,10,opt,name=isSelf,proto3" json:"isSelf,omitempty"`
	Abstianed   bool   `protobuf:"varint,11,opt,name=abstianed,proto3" json:"abstianed,omitempty"`
	Closed      bool   `protobuf:"varint,12,opt,name=closed,proto3" json:"closed,omitempty"`
}

func (x *ArbiterMemberStatus) Reset() {
	*x = ArbiterMemberStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterMemberStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterMemberStatus) ProtoMessage() {}

func (x *ArbiterMemberStatus) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterMemberStatus.ProtoReflect.Descriptor instead.
func (*ArbiterMemberStatus) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{14}
}

func (x *ArbiterMemberStatus) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ArbiterMemberStatus) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ArbiterMemberStatus) GetArbiter() uint32 {
	if x != nil {
		return x.Arbiter
	}
	return 0
}

func (x *ArbiterMemberStatus) GetRole() uint32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *ArbiterMemberStatus) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ArbiterMemberStatus) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *ArbiterMemberStatus) GetLastDelay() int64 {
	if x != nil {
		return x.LastDelay
	}
	return 0
}

func (x *ArbiterMemberStatus) GetLastError() int32 {
	if x != nil {
		return x.LastError
	}
	return 0
}

func (x *ArbiterMemberStatus) GetAofId() []byte {
	if x != nil {
		return x.AofId
	}
	return nil
}

func (x *ArbiterMemberStatus) GetIsSelf() bool {
	if x != nil {
		return x.IsSelf
	}
	return false
}

func (x *ArbiterMemberStatus) GetAbstianed() bool {
	if x != nil {
		return x.Abstianed
	}
	return false
}

func (x *ArbiterMemberStatus) GetClosed() bool {
	if x != nil {
		return x.Closed
	}
	return false
}

type ArbiterConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host    string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Weight  uint32 `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	Arbiter uint32 `protobuf:"varint,3,opt,name=arbiter,proto3" json:"arbiter,omitempty"`
}

func (x *ArbiterConfigRequest) Reset() {
	*x = ArbiterConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterConfigRequest) ProtoMessage() {}

func (x *ArbiterConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterConfigRequest.ProtoReflect.Descriptor instead.
func (*ArbiterConfigRequest) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{15}
}

func (x *ArbiterConfigRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ArbiterConfigRequest) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ArbiterConfigRequest) GetArbiter() uint32 {
	if x != nil {
		return x.Arbiter
	}
	return 0
}

type ArbiterConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Gid      string                 `protobuf:"bytes,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Version  uint32                 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Vertime  uint64                 `protobuf:"varint,4,opt,name=vertime,proto3" json:"vertime,omitempty"`
	Owner    string                 `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	Members  []*ArbiterMemberStatus `protobuf:"bytes,6,rep,name=members,proto3" json:"members,omitempty"`
	CommitId uint64                 `protobuf:"varint,7,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
}

func (x *ArbiterConfigResponse) Reset() {
	*x = ArbiterConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterConfigResponse) ProtoMessage() {}

func (x *ArbiterConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterConfigResponse.ProtoReflect.Descriptor instead.
func (*ArbiterConfigResponse) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{16}
}

func (x *ArbiterConfigResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArbiterConfigResponse) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *ArbiterConfigResponse) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ArbiterConfigResponse) GetVertime() uint64 {
	if x != nil {
		return x.Vertime
	}
	return 0
}

func (x *ArbiterConfigResponse) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ArbiterConfigResponse) GetMembers() []*ArbiterMemberStatus {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *ArbiterConfigResponse) GetCommitId() uint64 {
	if x != nil {
		return x.CommitId
	}
	return 0
}

type ArbiterMemberListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PollTimeout uint32 `protobuf:"varint,1,opt,name=pollTimeout,proto3" json:"pollTimeout,omitempty"`
	Version     uint32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Vertime     uint64 `protobuf:"varint,3,opt,name=vertime,proto3" json:"vertime,omitempty"`
}

func (x *ArbiterMemberListRequest) Reset() {
	*x = ArbiterMemberListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterMemberListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterMemberListRequest) ProtoMessage() {}

func (x *ArbiterMemberListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterMemberListRequest.ProtoReflect.Descriptor instead.
func (*ArbiterMemberListRequest) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{17}
}

func (x *ArbiterMemberListRequest) GetPollTimeout() uint32 {
	if x != nil {
		return x.PollTimeout
	}
	return 0
}

func (x *ArbiterMemberListRequest) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ArbiterMemberListRequest) GetVertime() uint64 {
	if x != nil {
		return x.Vertime
	}
	return 0
}

type ArbiterMemberListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Gid      string                 `protobuf:"bytes,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Version  uint32                 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Vertime  uint64                 `protobuf:"varint,4,opt,name=vertime,proto3" json:"vertime,omitempty"`
	Owner    string                 `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	Members  []*ArbiterMemberStatus `protobuf:"bytes,6,rep,name=members,proto3" json:"members,omitempty"`
	CommitId uint64                 `protobuf:"varint,7,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
}

func (x *ArbiterMemberListResponse) Reset() {
	*x = ArbiterMemberListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterMemberListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterMemberListResponse) ProtoMessage() {}

func (x *ArbiterMemberListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterMemberListResponse.ProtoReflect.Descriptor instead.
func (*ArbiterMemberListResponse) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{18}
}

func (x *ArbiterMemberListResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArbiterMemberListResponse) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *ArbiterMemberListResponse) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ArbiterMemberListResponse) GetVertime() uint64 {
	if x != nil {
		return x.Vertime
	}
	return 0
}

func (x *ArbiterMemberListResponse) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ArbiterMemberListResponse) GetMembers() []*ArbiterMemberStatus {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *ArbiterMemberListResponse) GetCommitId() uint64 {
	if x != nil {
		return x.CommitId
	}
	return 0
}

type ArbiterMemberAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host    string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Weight  uint32 `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	Arbiter uint32 `protobuf:"varint,3,opt,name=arbiter,proto3" json:"arbiter,omitempty"`
}

func (x *ArbiterMemberAddRequest) Reset() {
	*x = ArbiterMemberAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterMemberAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterMemberAddRequest) ProtoMessage() {}

func (x *ArbiterMemberAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterMemberAddRequest.ProtoReflect.Descriptor instead.
func (*ArbiterMemberAddRequest) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{19}
}

func (x *ArbiterMemberAddRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ArbiterMemberAddRequest) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ArbiterMemberAddRequest) GetArbiter() uint32 {
	if x != nil {
		return x.Arbiter
	}
	return 0
}

type ArbiterMemberAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Gid      string                 `protobuf:"bytes,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Version  uint32                 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Vertime  uint64                 `protobuf:"varint,4,opt,name=vertime,proto3" json:"vertime,omitempty"`
	Owner    string                 `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	Members  []*ArbiterMemberStatus `protobuf:"bytes,6,rep,name=members,proto3" json:"members,omitempty"`
	CommitId uint64                 `protobuf:"varint,7,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
}

func (x *ArbiterMemberAddResponse) Reset() {
	*x = ArbiterMemberAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterMemberAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterMemberAddResponse) ProtoMessage() {}

func (x *ArbiterMemberAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterMemberAddResponse.ProtoReflect.Descriptor instead.
func (*ArbiterMemberAddResponse) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{20}
}

func (x *ArbiterMemberAddResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArbiterMemberAddResponse) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *ArbiterMemberAddResponse) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ArbiterMemberAddResponse) GetVertime() uint64 {
	if x != nil {
		return x.Vertime
	}
	return 0
}

func (x *ArbiterMemberAddResponse) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ArbiterMemberAddResponse) GetMembers() []*ArbiterMemberStatus {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *ArbiterMemberAddResponse) GetCommitId() uint64 {
	if x != nil {
		return x.CommitId
	}
	return 0
}

type ArbiterMemberUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host    string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Weight  uint32 `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	Arbiter uint32 `protobuf:"varint,3,opt,name=arbiter,proto3" json:"arbiter,omitempty"`
}

func (x *ArbiterMemberUpdateRequest) Reset() {
	*x = ArbiterMemberUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterMemberUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterMemberUpdateRequest) ProtoMessage() {}

func (x *ArbiterMemberUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterMemberUpdateRequest.ProtoReflect.Descriptor instead.
func (*ArbiterMemberUpdateRequest) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{21}
}

func (x *ArbiterMemberUpdateRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ArbiterMemberUpdateRequest) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ArbiterMemberUpdateRequest) GetArbiter() uint32 {
	if x != nil {
		return x.Arbiter
	}
	return 0
}

type ArbiterMemberUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Gid      string                 `protobuf:"bytes,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Version  uint32                 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Vertime  uint64                 `protobuf:"varint,4,opt,name=vertime,proto3" json:"vertime,omitempty"`
	Owner    string                 `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	Members  []*ArbiterMemberStatus `protobuf:"bytes,6,rep,name=members,proto3" json:"members,omitempty"`
	CommitId uint64                 `protobuf:"varint,7,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
}

func (x *ArbiterMemberUpdateResponse) Reset() {
	*x = ArbiterMemberUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterMemberUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterMemberUpdateResponse) ProtoMessage() {}

func (x *ArbiterMemberUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterMemberUpdateResponse.ProtoReflect.Descriptor instead.
func (*ArbiterMemberUpdateResponse) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{22}
}

func (x *ArbiterMemberUpdateResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArbiterMemberUpdateResponse) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *ArbiterMemberUpdateResponse) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ArbiterMemberUpdateResponse) GetVertime() uint64 {
	if x != nil {
		return x.Vertime
	}
	return 0
}

func (x *ArbiterMemberUpdateResponse) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ArbiterMemberUpdateResponse) GetMembers() []*ArbiterMemberStatus {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *ArbiterMemberUpdateResponse) GetCommitId() uint64 {
	if x != nil {
		return x.CommitId
	}
	return 0
}

type ArbiterMemberRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *ArbiterMemberRemoveRequest) Reset() {
	*x = ArbiterMemberRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterMemberRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterMemberRemoveRequest) ProtoMessage() {}

func (x *ArbiterMemberRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterMemberRemoveRequest.ProtoReflect.Descriptor instead.
func (*ArbiterMemberRemoveRequest) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{23}
}

func (x *ArbiterMemberRemoveRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type ArbiterMemberRemoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Gid      string                 `protobuf:"bytes,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Version  uint32                 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Vertime  uint64                 `protobuf:"varint,4,opt,name=vertime,proto3" json:"vertime,omitempty"`
	Owner    string                 `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	Members  []*ArbiterMemberStatus `protobuf:"bytes,6,rep,name=members,proto3" json:"members,omitempty"`
	CommitId uint64                 `protobuf:"varint,7,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
}

func (x *ArbiterMemberRemoveResponse) Reset() {
	*x = ArbiterMemberRemoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arbiter_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArbiterMemberRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArbiterMemberRemoveResponse) ProtoMessage() {}

func (x *ArbiterMemberRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arbiter_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArbiterMemberRemoveResponse.ProtoReflect.Descriptor instead.
func (*ArbiterMemberRemoveResponse) Descriptor() ([]byte, []int) {
	return file_arbiter_proto_rawDescGZIP(), []int{24}
}

func (x *ArbiterMemberRemoveResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArbiterMemberRemoveResponse) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *ArbiterMemberRemoveResponse) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ArbiterMemberRemoveResponse) GetVertime() uint64 {
	if x != nil {
		return x.Vertime
	}
	return 0
}

func (x *ArbiterMemberRemoveResponse) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ArbiterMemberRemoveResponse) GetMembers() []*ArbiterMemberStatus {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *ArbiterMemberRemoveResponse) GetCommitId() uint64 {
	if x != nil {
		return x.CommitId
	}
	return 0
}

var File_arbiter_proto protoreflect.FileDescriptor

var file_arbiter_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x22, 0x69, 0x0a, 0x0d, 0x52, 0x65, 0x70,
	0x6c, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x62, 0x69, 0x74, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x53, 0x65, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x31, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64,
	0x22, 0x4d, 0x0a, 0x15, 0x41, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72,
	0x6f, 0x6d, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x48, 0x6f, 0x73, 0x74, 0x22,
	0x39, 0x0a, 0x16, 0x41, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x72, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7f, 0x0a, 0x1a, 0x41, 0x72,
	0x62, 0x69, 0x74, 0x65, 0x72, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f,
	0x6d, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x2b,
	0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x53,
	0x65, 0x74, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x73, 0x65, 0x74, 0x22, 0x3e, 0x0a, 0x1b, 0x41,
	0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x72,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x41,
	0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0xa7, 0x01, 0x0a, 0x13, 0x41, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x56, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x72, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x62, 0x69, 0x74, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x6f, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x6f, 0x66, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x64, 0x0a, 0x16, 0x41,
	0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x6f, 0x66, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6f, 0x66, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x22, 0x5b, 0x0a, 0x17, 0x41, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x72, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x62,
	0x0a, 0x14, 0x41, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x6f, 0x66, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6f, 0x66, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x22, 0x55, 0x0a, 0x15, 0x41, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x72, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x41, 0x72, 0x62,
	0x69, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x63, 0x0a, 0x15, 0x41, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x72,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61,
	0x6f, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6f, 0x66,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0xc9, 0x02, 0x0a, 0x13, 0x41, 0x72, 0x62, 0x69, 0x74,
	0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72,
	0x62, 0x69, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x72, 0x62,
	0x69, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x6f, 0x66, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x61,
	0x6f, 0x66, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x62, 0x73, 0x74, 0x69, 0x61, 0x6e, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x61, 0x62, 0x73, 0x74, 0x69, 0x61, 0x6e, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x22, 0x5c, 0x0a, 0x14, 0x41, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x62, 0x69, 0x74, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72,
	0x22, 0xdd, 0x01, 0x0a, 0x15, 0x41, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64,
	0x22, 0x70, 0x0a, 0x18, 0x41, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x6f, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x70, 0x6f, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x6d, 0x65, 0x22, 0xe1, 0x01, 0x0a, 0x19, 0x41, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x72, 0x62,
	0x69, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x17, 0x41, 0x72, 0x62, 0x69, 0x74, 0x65,
	0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x61, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x22, 0xe0, 0x01, 0x0a, 0x18, 0x41, 0x72, 0x62, 0x69,
	0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x1a, 0x41, 0x72,
	0x62, 0x69, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x22, 0xe3,
	0x01, 0x0a, 0x1b, 0x41, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x67, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x37,
	0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x72, 0x62, 0x69, 0x74,
	0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x07,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x1a, 0x41, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x1b, 0x41, 0x72, 0x62, 0x69, 0x74,
	0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x72, 0x62, 0x69, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x42, 0x2b, 0x5a, 0x29,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6e, 0x6f, 0x77, 0x65,
	0x72, 0x2f, 0x73, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_arbiter_proto_rawDescOnce sync.Once
	file_arbiter_proto_rawDescData = file_arbiter_proto_rawDesc
)

func file_arbiter_proto_rawDescGZIP() []byte {
	file_arbiter_proto_rawDescOnce.Do(func() {
		file_arbiter_proto_rawDescData = protoimpl.X.CompressGZIP(file_arbiter_proto_rawDescData)
	})
	return file_arbiter_proto_rawDescData
}

var file_arbiter_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_arbiter_proto_goTypes = []interface{}{
	(*ReplSetMember)(nil),               // 0: protobuf.ReplSetMember
	(*ReplSet)(nil),                     // 1: protobuf.ReplSet
	(*ArbiterConnectRequest)(nil),       // 2: protobuf.ArbiterConnectRequest
	(*ArbiterConnectResponse)(nil),      // 3: protobuf.ArbiterConnectResponse
	(*ArbiterAnnouncementRequest)(nil),  // 4: protobuf.ArbiterAnnouncementRequest
	(*ArbiterAnnouncementResponse)(nil), // 5: protobuf.ArbiterAnnouncementResponse
	(*ArbiterVoteRequest)(nil),          // 6: protobuf.ArbiterVoteRequest
	(*ArbiterVoteResponse)(nil),         // 7: protobuf.ArbiterVoteResponse
	(*ArbiterProposalRequest)(nil),      // 8: protobuf.ArbiterProposalRequest
	(*ArbiterProposalResponse)(nil),     // 9: protobuf.ArbiterProposalResponse
	(*ArbiterCommitRequest)(nil),        // 10: protobuf.ArbiterCommitRequest
	(*ArbiterCommitResponse)(nil),       // 11: protobuf.ArbiterCommitResponse
	(*ArbiterStatusRequest)(nil),        // 12: protobuf.ArbiterStatusRequest
	(*ArbiterStatusResponse)(nil),       // 13: protobuf.ArbiterStatusResponse
	(*ArbiterMemberStatus)(nil),         // 14: protobuf.ArbiterMemberStatus
	(*ArbiterConfigRequest)(nil),        // 15: protobuf.ArbiterConfigRequest
	(*ArbiterConfigResponse)(nil),       // 16: protobuf.ArbiterConfigResponse
	(*ArbiterMemberListRequest)(nil),    // 17: protobuf.ArbiterMemberListRequest
	(*ArbiterMemberListResponse)(nil),   // 18: protobuf.ArbiterMemberListResponse
	(*ArbiterMemberAddRequest)(nil),     // 19: protobuf.ArbiterMemberAddRequest
	(*ArbiterMemberAddResponse)(nil),    // 20: protobuf.ArbiterMemberAddResponse
	(*ArbiterMemberUpdateRequest)(nil),  // 21: protobuf.ArbiterMemberUpdateRequest
	(*ArbiterMemberUpdateResponse)(nil), // 22: protobuf.ArbiterMemberUpdateResponse
	(*ArbiterMemberRemoveRequest)(nil),  // 23: protobuf.ArbiterMemberRemoveRequest
	(*ArbiterMemberRemoveResponse)(nil), // 24: protobuf.ArbiterMemberRemoveResponse
}
var file_arbiter_proto_depIdxs = []int32{
	0,  // 0: protobuf.ReplSet.members:type_name -> protobuf.ReplSetMember
	1,  // 1: protobuf.ArbiterAnnouncementRequest.replset:type_name -> protobuf.ReplSet
	14, // 2: protobuf.ArbiterConfigResponse.members:type_name -> protobuf.ArbiterMemberStatus
	14, // 3: protobuf.ArbiterMemberListResponse.members:type_name -> protobuf.ArbiterMemberStatus
	14, // 4: protobuf.ArbiterMemberAddResponse.members:type_name -> protobuf.ArbiterMemberStatus
	14, // 5: protobuf.ArbiterMemberUpdateResponse.members:type_name -> protobuf.ArbiterMemberStatus
	14, // 6: protobuf.ArbiterMemberRemoveResponse.members:type_name -> protobuf.ArbiterMemberStatus
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_arbiter_proto_init() }
func file_arbiter_proto_init() {
	if File_arbiter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_arbiter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplSetMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterConnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterAnnouncementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterAnnouncementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterVoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterVoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterProposalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterProposalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterCommitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterCommitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterMemberStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterMemberListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterMemberListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterMemberAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterMemberAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterMemberUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterMemberUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterMemberRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arbiter_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArbiterMemberRemoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_arbiter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_arbiter_proto_goTypes,
		DependencyIndexes: file_arbiter_proto_depIdxs,
		MessageInfos:      file_arbiter_proto_msgTypes,
	}.Build()
	File_arbiter_proto = out.File
	file_arbiter_proto_rawDesc = nil
	file_arbiter_proto_goTypes = nil
	file_arbiter_proto_depIdxs = nil
}
